# OpnForm - Self-hostable form builder
# https://opnform.com

services:
  api-init:
    image: jhumanj/opnform-api:latest
    container_name: opnform-api-init
    command: ["/bin/sh", "-c", "cp -r /usr/share/nginx/html/* /shared-app/ && echo 'Laravel app files copied to shared volume'"]
    volumes:
      - opnform_app:/shared-app
    restart: "no"

  api:
    image: jhumanj/opnform-api:latest
    container_name: opnform-api
    volumes:
      - opnform_storage:/usr/share/nginx/html/storage:rw
      - opnform_app:/usr/share/nginx/html:rw
    environment: &api-environment
      # Core Application Settings
      APP_ENV: production
      APP_NAME: ${APP_NAME:-OpnForm}
      APP_URL: ${APP_URL}
      APP_KEY: ${APP_KEY}
      FRONT_URL: ${FRONT_URL}
      SELF_HOSTED: "true"
      
      # Database Configuration
      DB_HOST: db
      DB_DATABASE: ${DB_DATABASE:-opnform}
      DB_USERNAME: ${DB_USERNAME:-opnform}
      DB_PASSWORD: ${DB_PASSWORD}
      DB_CONNECTION: pgsql
      
      # Redis Configuration
      REDIS_HOST: redis
      REDIS_PASSWORD: ${REDIS_PASSWORD:-}
      
      # JWT Configuration
      JWT_SECRET: ${JWT_SECRET}
      JWT_TTL: ${JWT_TTL:-10080}
      
      # Mail Configuration
      MAIL_MAILER: ${MAIL_MAILER:-smtp}
      MAIL_HOST: ${MAIL_HOST:-}
      MAIL_PORT: ${MAIL_PORT:-587}
      MAIL_USERNAME: ${MAIL_USERNAME:-}
      MAIL_PASSWORD: ${MAIL_PASSWORD:-}
      MAIL_ENCRYPTION: ${MAIL_ENCRYPTION:-tls}
      MAIL_FROM_ADDRESS: ${MAIL_FROM_ADDRESS}
      MAIL_FROM_NAME: ${MAIL_FROM_NAME:-OpnForm}
      
      # File Storage Configuration
      FILESYSTEM_DRIVER: ${FILESYSTEM_DRIVER:-local}
      AWS_ACCESS_KEY_ID: ${AWS_ACCESS_KEY_ID:-}
      AWS_SECRET_ACCESS_KEY: ${AWS_SECRET_ACCESS_KEY:-}
      AWS_DEFAULT_REGION: ${AWS_DEFAULT_REGION:-us-east-1}
      AWS_BUCKET: ${AWS_BUCKET:-}
      
      # Optional Captcha Configuration
      H_CAPTCHA_SITE_KEY: ${H_CAPTCHA_SITE_KEY:-}
      H_CAPTCHA_SECRET_KEY: ${H_CAPTCHA_SECRET_KEY:-}
      RE_CAPTCHA_SITE_KEY: ${RE_CAPTCHA_SITE_KEY:-}
      RE_CAPTCHA_SECRET_KEY: ${RE_CAPTCHA_SECRET_KEY:-}
      
      # Optional AI Integration
      OPEN_AI_API_KEY: ${OPEN_AI_API_KEY:-}
      
      # PHP Configuration
      PHP_MEMORY_LIMIT: ${PHP_MEMORY_LIMIT:-1G}
      PHP_MAX_EXECUTION_TIME: ${PHP_MAX_EXECUTION_TIME:-600}
      PHP_UPLOAD_MAX_FILESIZE: ${PHP_UPLOAD_MAX_FILESIZE:-64M}
      PHP_POST_MAX_SIZE: ${PHP_POST_MAX_SIZE:-64M}
      
      # Cache and Queue Configuration
      CACHE_STORE: redis
      QUEUE_CONNECTION: redis
      SESSION_DRIVER: redis
    depends_on:
      api-init:
        condition: service_completed_successfully
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD-SHELL", "php /usr/share/nginx/html/artisan about || exit 1"]
      interval: 30s
      timeout: 15s
      retries: 3
      start_period: 60s

  api-worker:
    image: jhumanj/opnform-api:latest
    container_name: opnform-api-worker
    command: ["php", "artisan", "queue:work"]
    volumes:
      - opnform_storage:/usr/share/nginx/html/storage:rw
      - opnform_app:/usr/share/nginx/html:ro
    environment: *api-environment
    depends_on:
      api:
        condition: service_healthy
    healthcheck:
      test: ["CMD-SHELL", "pgrep -f 'php artisan queue:work' > /dev/null || exit 1"]
      interval: 60s
      timeout: 10s
      retries: 3
      start_period: 30s

  api-scheduler:
    image: jhumanj/opnform-api:latest
    container_name: opnform-api-scheduler
    command: ["php", "artisan", "schedule:work"]
    volumes:
      - opnform_storage:/usr/share/nginx/html/storage:rw
      - opnform_app:/usr/share/nginx/html:ro
    environment: *api-environment
    depends_on:
      api:
        condition: service_healthy
    healthcheck:
      test: ["CMD-SHELL", "php /usr/share/nginx/html/artisan app:scheduler-status --mode=check --max-minutes=3 || exit 1"]
      interval: 60s
      timeout: 30s
      retries: 3
      start_period: 70s

  ui:
    image: jhumanj/opnform-client:latest
    container_name: opnform-client
    environment:
      NUXT_PUBLIC_APP_URL: ${FRONT_URL}
      NUXT_PUBLIC_API_BASE: ${APP_URL}
      NUXT_API_SECRET: ${FRONT_API_SECRET}
      NUXT_PUBLIC_H_CAPTCHA_SITE_KEY: ${H_CAPTCHA_SITE_KEY:-}
      NUXT_PUBLIC_RE_CAPTCHA_SITE_KEY: ${RE_CAPTCHA_SITE_KEY:-}
      NUXT_PUBLIC_AMPLITUDE_CODE: ${AMPLITUDE_CODE:-}
      NUXT_PUBLIC_CRISP_WEBSITE_ID: ${CRISP_WEBSITE_ID:-}
      NUXT_PUBLIC_GOOGLE_ANALYTICS_CODE: ${GOOGLE_ANALYTICS_CODE:-}
      NUXT_HOST: 0.0.0.0
      NUXT_PORT: 3000
    healthcheck:
      test: ["CMD-SHELL", "wget --spider -q http://0.0.0.0:3000/ || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 45s

  redis:
    image: redis:7-alpine
    container_name: opnform-redis
    command: redis-server --requirepass ${REDIS_PASSWORD:-}
    volumes:
      - redis-data:/data
    healthcheck:
      test: ["CMD-SHELL", "redis-cli -a '${REDIS_PASSWORD:-}' ping | grep PONG"]
      interval: 30s
      timeout: 5s
      retries: 3

  db:
    image: postgres:16-alpine
    container_name: opnform-db
    environment:
      POSTGRES_DB: ${DB_DATABASE:-opnform}
      POSTGRES_USER: ${DB_USERNAME:-opnform}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    volumes:
      - postgres-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USERNAME:-opnform}"]
      interval: 30s
      timeout: 5s
      retries: 3

  ingress:
    image: nginx:1-alpine
    container_name: opnform-ingress
    ports:
      - "${PORT:-3000}:80"
    environment:
      NGINX_MAX_BODY_SIZE: ${NGINX_MAX_BODY_SIZE:-64m}
    volumes:
      - ./nginx.conf:/etc/nginx/templates/default.conf.template
      - opnform_app:/usr/share/nginx/html:ro
    depends_on:
      api:
        condition: service_started
      ui:
        condition: service_started
    healthcheck:
      test: ["CMD-SHELL", "nginx -t && curl -f http://localhost/ || exit 1"]
      interval: 30s
      timeout: 5s
      retries: 3
      start_period: 10s

volumes:
  postgres-data:
  opnform_storage:
  opnform_app:
  redis-data: